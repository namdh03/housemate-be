name: üöÄ CI/CD - Java Spring Boot

on:
  push:
    branches: ['main']

env:
  DOCKER_IMAGE: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_PROJECT }}/${{ github.event.repository.name }}:${{ github.ref_name }}_${{ github.sha }}
  DOCKER_CONTAINER: ${{ github.event.repository.name }}
  DOCKER_PLATFORM: linux/amd64

  APP_INTERNAL_PORT: ${{ vars.APP_INTERNAL_PORT || '8080' }}
  APP_EXTERNAL_PORT: ${{ secrets.APP_EXTERNAL_PORT || '8080' }}

  DEPLOY_HOST: ${{ secrets.HOST_PRODUCTION }}
  DEPLOY_USERNAME: ${{ secrets.USERNAME_PRODUCTION }}
  DEPLOY_KEY: ${{ secrets.KEY_PRODUCTION }}
  DEPLOY_PORT: ${{ secrets.PORT_PRODUCTION }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set build time
        run: echo "BUILD_TIME=$(date '+%Y-%m-%d %H:%M:%S')" >> "$GITHUB_ENV"

      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: üìã Build information
        run: |
          echo "üöÄ Starting Spring Boot Build"
          echo "üë§ Author: ${{ github.actor }}"
          echo "üè∑Ô∏è Branch: ${{ github.ref_name }}"

      - name: üìÑ Create application.properties
        run: |
          echo "üìÑ Creating production configuration file..."
          echo "${{ secrets.APPLICATION_PROPERTIES_PRODUCTION }}" > src/main/resources/application.properties

      - name: üîë Create credentials.json for Google Analytics
        run: |
          echo "üîë Creating Google Service Account credentials..."
          echo "${{ secrets.GOOGLE_CREDENTIALS_JSON }}" > src/main/resources/credentials.json

      - name: üîê Registry login
        run: |
          echo "üîê Authenticating with Docker registry..."
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: üèóÔ∏è Build Docker image
        run: |
          echo "üèóÔ∏è Building Docker image..."
          docker build --platform ${{ env.DOCKER_PLATFORM }} -t ${{ env.DOCKER_IMAGE }} .
      
      - name: üì§ Push to registry
        run: |
          echo "üì§ Pushing image to registry..."
          docker push ${{ env.DOCKER_IMAGE }}

      - name: üéØ Build summary
        run: |
          echo "üéâ BUILD COMPLETED"
          echo "‚è∞ Time: ${{ env.BUILD_TIME }}"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set deploy time
        run: echo "DEPLOY_TIME=$(date '+%Y-%m-%d %H:%M:%S')" >> "$GITHUB_ENV"

      - name: üöÄ Deploy to server via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USERNAME }}
          key: ${{ env.DEPLOY_KEY }}
          port: ${{ env.DEPLOY_PORT }}
          script: |
            echo "üöÄ Starting deployment on server..."
            
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
            
            docker pull ${{ env.DOCKER_IMAGE }}
            
            docker rm -f ${{ env.DOCKER_CONTAINER }} || true
            
            docker run --name ${{ env.DOCKER_CONTAINER }} --restart always -dp ${{ env.APP_EXTERNAL_PORT }}:${{ env.APP_INTERNAL_PORT }} ${{ env.DOCKER_IMAGE }}
            
            echo "‚úÖ Deployment completed"

      - name: üéâ Deploy summary
        run: |
          echo "üéâ DEPLOYMENT COMPLETED"
          echo "üë§ Deployed by: ${{ github.actor }}"
          echo "‚è∞ Time: ${{ env.DEPLOY_TIME }}"